[Project]
name: "libvmdk"
status: "alpha"
features: [
    "debug_output", "tests", "tools", "python",
    "git", "source_package",
    "cygwin", "gcc", "mingw", "msvscpp",
    "dpkg", "rpm",
    "dokan", "fuse"]

[documentation]
url: "https://github.com/libyal/libvmdk/tree/master/documentation"

[source_package]
url: "https://github.com/libyal/libvmdk/releases"

[git]
url: "https://github.com/libyal/libvmdk.git"
build_dependencies: []

[development]
features: ["pytsk3"]
main_object: "handle"
main_object_filename: "image.vmdk"
main_object_post_open_python: [
    "vmdk_handle.open_extent_data_files()"]
main_object_post_open_file_object_python: [
    "base_directory = os.path.dirname(filename)",
    "",
    "extent_data_files = []",
    "for extent_descriptor in vmdk_handle.extent_descriptors:",
    "  extent_data_filename = extent_descriptor.filename",
    "",
    "  _, path_separator, filename = extent_data_filename.rpartition(\"/\")",
    "  if not path_separator:",
    "    _, path_separator, filename = extent_data_filename.rpartition(\"\\\\\")",
    "",
    "  if not path_separator:",
    "    filename = extent_data_filename",
    "",
    "  extent_data_file_path = os.path.join(base_directory, filename)",
    "",
    "  if not os.path.exists(extent_data_file_path):",
    "    break",
    "",
    "  extent_data_files.append(extent_data_file_path)",
    "",
    "if len(extent_data_files) != vmdk_handle.number_of_extents:",
    "  raise RuntimeError(\"Unable to locate all extent data files.\")",
    "",
    "file_objects = []",
    "for extent_data_file_path in extent_data_files:",
    "  file_object = open(extent_data_file_path, \"rb\")",
    "  file_objects.append(file_object)",
    "",
    "vmdk_handle.open_extent_data_files_file_objects(file_objects)"]
main_object_size: "media_size"

[tests]
features: ["profiles", "valgrind"]
profiles: ["libvmdk", "pyvmdk", "vmdkinfo"]
example_filename1: "image1.vmdk"
example_filename2: "image2.vmdk"

[tools]
directory: "vmdktools"
names: ["vmdkinfo", "vmdkmount"]

[troubleshooting]
example: "vmdkinfo image.vmdk"

[cygwin]
build_dependencies: [
    "zlib-devel (optional but required for compressed image support)"]
dll_dependencies: []
dll_filename: "cygvmdk-0.dll"

[gcc]
build_dependencies: [
    "zlib (optional but required for compressed image support)"]
static_build_dependencies: [
    "zlib (for compressed image support)"]

[mingw]
build_dependencies: [
    "MinGW build of zlib library and source headers (optional but required for compressed image support)"]
dll_dependencies: []
dll_filename: "libvmdk-1.dll"

[msvscpp]
build_dependencies: [
    "zlib (required for compressed image support)"]
dll_dependencies: [
    "zlib.dll"]

[dpkg]
build_dependencies: [
    "zlib1g-dev"]

[rpm]
build_dependencies: [
    "zlib-devel"]

[mount_tool]
missing_backend_error: "No sub system to mount VMDK."
mount_point: "/mnt/vmdkimage/"
mounted_description: "a device file that provides the RAW storage media data contained in the VMDK image"
mounted_dokan: "X:\\VMDK1"
mounted_fuse: "/mnt/vmdkimage/vmdk1"
source: "image.vmdk"
source_description: "a VMDK image"
source_type: "image"
supported_backends: [
    "Dokan library",
    "fuse",
    "OSXFuse"]

